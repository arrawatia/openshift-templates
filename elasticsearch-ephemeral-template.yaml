kind: Template
apiVersion: v1
metadata:
  name: elasticsearch-ephemeral
  annotations:
    description: 'Elasticsearch database service, without persistent storage. WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing'
    iconClass: icon-database
    tags: 'database,elasticsearch'
objects:
    #---------------------------------------------------------------------------------
    - kind: Service
      apiVersion: v1
      metadata:
        name: 'svc-http-${INSTANCE_NAME}'
        labels:
          name: '${INSTANCE_NAME}'
          component: elasticsearch
      spec:
        ports:
          - name: es-http
            port: 9200
            targetPort: 9200
        selector:
          name: '${INSTANCE_NAME}'

    - kind: Service
      apiVersion: v1
      metadata:
        name: 'svc-transport-${INSTANCE_NAME}'
        labels:
          name: '${INSTANCE_NAME}'
          component: elasticsearch
      spec:
        ports:
          - name: es-transport
            protocol: TCP
            port: 9300
            targetPort: 9300
        selector:
          name: '${INSTANCE_NAME}'

    #---------------------------------------------------------------------------------
    - kind: Route
      apiVersion: v1
      metadata:
        name: '${INSTANCE_NAME}'
        annotations:
          description: "Route for ${INSTANCE_NAME} Elasticsearch HTTP API"
        labels:
          name: '${INSTANCE_NAME}'
          component: elasticsearch
      spec:
        host: '${APPLICATION_DOMAIN}'
        to:
          kind: Service
          name: 'svc-http-${INSTANCE_NAME}'

  #---------------------------------------------------------------------------------
    - kind: DeploymentConfig
      apiVersion: v1
      metadata:
        name: 'dc-${INSTANCE_NAME}'
        labels:
          name: '${INSTANCE_NAME}'
          component: elasticsearch
      spec:
        strategy:
          type: Recreate
        triggers:
          - type: ConfigChange
        replicas: 1
        selector:
          name: '${INSTANCE_NAME}'
          component: elasticsearch
        template:
          metadata:
            labels:
              name: '${INSTANCE_NAME}'
              component: elasticsearch
          spec:
            serviceAccount: quantezza
            containers:
              - name: elasticsearch
                image: quay.io/pires/docker-elasticsearch-kubernetes:1.7.2
                securityContext:
                  runAsUser: 0
                  privileged: false
                ports:
                  - name: "http"
                    containerPort: 9200
                    protocol: TCP
                  - name: "transport"
                    containerPort: 9300
                    protocol: TCP
                env:
                  - name: "KUBERNETES_TRUST_CERT"
                    value: "true"
                  - name: KUBERNETES_CA_CERTIFICATE_FILE
                    value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                  - name: "DISCOVERY_SERVICE"
                    value: 'svc-${INSTANCE_NAME}'
                  - name: NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                volumeMounts:
                  - name: 'data-${INSTANCE_NAME}'
                    mountPath: /data
                terminationMessagePath: /dev/termination-log
                imagePullPolicy: IfNotPresent
            volumes:
              - name: 'data-${INSTANCE_NAME}'
                emptyDir:
                  medium: ''
            restartPolicy: Always
            dnsPolicy: ClusterFirst
    
parameters:
  - name: INSTANCE_NAME
    description: Application instance name
    required: true
  - name: APPLICATION_DOMAIN
    description: "The exposed hostname that will route to the Elasticsearch cluster, if left blank a value will be defaulted."
    value: ""
labels:
  template: elasticsearch-ephemeral-template
