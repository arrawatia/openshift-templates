kind: Template
apiVersion: v1
metadata:
  name: elasticsearch-ephemeral
  creationTimestamp: null
  annotations:
    description: 'Elasticsearch database service, without persistent storage. WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing'
    iconClass: icon-database
    tags: 'database,elasticsearch'
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: '${DATABASE_SERVICE_NAME}'
      creationTimestamp: null
    spec:
      ports:
        - name: es-http
          protocol: TCP
          port: 9200
          targetPort: 9200
          nodePort: 0
        - name: es-transport
          protocol: TCP
          port: 9300
          targetPort: 9300
          nodePort: 0
      selector:
        name: '${DATABASE_SERVICE_NAME}'
      portalIP: ''
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: '${DATABASE_SERVICE_NAME}'
      creationTimestamp: null
    spec:
      strategy:
        type: Recreate
        resources: {}
      triggers:
        - type: ConfigChange
      replicas: 1
      selector:
        name: '${DATABASE_SERVICE_NAME}'
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: '${DATABASE_SERVICE_NAME}'
        spec:
          serviceAccount: elasticsearch
          containers:
            - name: elasticsearch
              image: quay.io/pires/docker-elasticsearch-kubernetes:1.7.2
              securityContext:
                runAsUser: 0
              ports:
                - name: "http"
                  containerPort: 9200
                  protocol: TCP
                - name: "transport"
                  containerPort: 9300
                  protocol: TCP
              env:
                - name: "KUBERNETES_TRUST_CERT"
                  value: "true"
                - name: KUBERNETES_CA_CERTIFICATE_FILE
                  value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                - name: "DISCOVERY_SERVICE"
                  value: '${DATABASE_SERVICE_NAME}'
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              resources: {}
              volumeMounts:
                - name: '${DATABASE_SERVICE_NAME}-data'
                  mountPath: /data
              terminationMessagePath: /dev/termination-log
              imagePullPolicy: IfNotPresent
              capabilities: {}
              securityContext:
                capabilities: {}
                privileged: false
          volumes:
            - name: '${DATABASE_SERVICE_NAME}-data'
              emptyDir:
                medium: ''
          restartPolicy: Always
          dnsPolicy: ClusterFirst
    status: {}
parameters:
  - name: DATABASE_SERVICE_NAME
    description: Database service name
    value: es-default
    required: true
labels:
  template: elasticsearch-ephemeral-template
